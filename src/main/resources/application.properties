server.port = ${PORT:8081}
logging.level.root=INFO

spring.thymeleaf.cache=false

spring.messages.basename=i18n/messages

spring.web.locale-resolver=fixed

spring.web.locale=vi_VN

#spring.datasource.url=jdbc:postgresql://localhost:5432/sql_demo
#spring.datasource.username=postgres
#spring.datasource.password=1234
#spring.jpa.show-sql=true

spring.datasource.url=jdbc:postgresql://ec2-54-228-32-29.eu-west-1.compute.amazonaws.com
spring.datasource.username=bjsvjylwjdhjud
spring.datasource.password=180cc3a661ca349cc6f34b6d1012f6d0f00a53a6ceb636a287145b8a6953b7aa
spring.jpa.show-sql=true

# App Properties
bezkoder.app.jwtSecret= bezKoderSecretKey
bezkoder.app.jwtExpirationMs= 86400000

#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.maxActive=10
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create
spring.jpa.generate-ddl=true
spring.datasource.initialization-mode=always
spring.datasource.data = classpath:db/createAccountPgAdminScript.sql

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
spring.datasource.autoCommit=false

# AWS S3 configuration
amazon.s3.accessKey=AKIASBU5TR54Q6K737HR
amazon.s3.secretKey=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
amazon.s3.bucketName=pengu-classroom
amazon.s3.region=ap-southeast-1
amazon.s3.endpoint=https://pengu-classroom.s3.ap-southeast-1.amazonaws.com
